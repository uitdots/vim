" Ref: https://github.com/OptimusCrime/ideavim/blob/main/ideavimrc

" TODO:
" Refactoring
" https://github.com/OptimusCrime/ideavim/blob/7daba35b92ac276a2809492aab95fcf3c8bcd8e9/ideavimrc#L150
" https://github.com/OptimusCrime/ideavim/blob/7daba35b92ac276a2809492aab95fcf3c8bcd8e9/ideavimrc#L160
" https://github.com/OptimusCrime/ideavim/blob/7daba35b92ac276a2809492aab95fcf3c8bcd8e9/ideavimrc#L170
" https://github.com/OptimusCrime/ideavim/blob/7daba35b92ac276a2809492aab95fcf3c8bcd8e9/ideavimrc#L206

" extension
set NERDTree
set ReplaceWithRegister
set Which-Key
set argtextobj
set commentary
set functiontextobj
set highlightedyank
set mini-ai
set multiple-cursors
set surround
set textobj-entire

source ~/.vim/core/options.vim
source ~/.vim/core/keymaps.vim
source ~/.vim/core/autocmds.vim

set clipboard=ideaput
set ideajoin
set idearefactormode=keep

" Allow vim handler
sethandler <C-a> a:vim
sethandler <C-b> a:vim
sethandler <C-c> a:vim
sethandler <C-d> a:vim
sethandler <C-e> a:vim
sethandler <C-f> a:vim
sethandler <C-g> a:vim
sethandler <C-h> a:vim
sethandler <C-i> a:vim
sethandler <C-j> a:vim
sethandler <C-k> a:vim
sethandler <C-l> a:vim
sethandler <C-m> a:vim
sethandler <C-n> a:vim
sethandler <C-o> a:vim
sethandler <C-p> a:vim
sethandler <C-q> a:vim
sethandler <C-r> a:vim
sethandler <C-s> a:vim
sethandler <C-t> a:vim
sethandler <C-u> a:vim
sethandler <C-v> a:vim
sethandler <C-v> a:vim
sethandler <C-w> a:vim
sethandler <C-x> a:vim
sethandler <C-y> a:vim

" which-key settings
set notimeout
set timeoutlen=500
let g:WhichKey_ShowVimActions = "true"
let g:WhichKey_DefaultDelay = 600
let g:WhichKey_ProcessUnknownMappings = "false"

" General desc
let g:WhichKeyDesc_yank_all = "<leader>y General | Yank All"

" Neccessary mappings
nnoremap <leader><leader> :action SearchEverywhere<CR>
let g:WhichKeyDesc_search_everywhere = "<leader><leader> General | Search Everywhere"

" source
nnoremap <leader>9 :action IdeaVim.ReloadVimRc.reload<CR>
let g:WhichKeyDesc_reload_config = "<leader>9 General | Reload Config"

" toggle which-key plugin
let s:whichKeyEnabled = 0
function! WhichKeyToggle()
  if s:whichKeyEnabled
    set which-key!
    set notimeout!
    let s:whichKeyEnabled = 0
  else
    set which-key
    set notimeout
    let s:whichKeyEnabled = 1
  endif
endfunction

nnoremap <leader>8 :call WhichKeyToggle()<cr>
let g:WhichKeyDesc_toggle_which_key = "<leader>8 General | Toggle WhichKey"

" toggle line number relative
function! NumberToggle()
  if(&relativenumber == 1)
    set norelativenumber
  else
    set relativenumber number
  endif
endfunction

" Options
let g:WhichKeyDesc_options = "<leader>o Options"
nnoremap <leader>or :call NumberToggle()<cr>
let g:WhichKeyDesc_options_toggle_relativenumber = "<leader>or Options | Toggle Relative Number"

" Close buffer aka editor
nnoremap <leader>c :action CloseEditor<CR>
let g:WhichKeyDesc_close_editor = "<leader>c Close Editor"
nnoremap <leader>C :action CloseAllEditorsButActive<CR>
let g:WhichKeyDesc_close_other_editors = "<leader>C General | Close Other Editors"
nnoremap <leader><C-c> :action CloseAllEditors<CR>
let g:WhichKeyDesc_close_all_editors = "<leader><C-c> General | Close All Editors"

" Navigate
nnoremap [m :action MethodUp<CR>
let g:WhichKeyDesc_previous_method = "[m Previous | Method Start"
nnoremap ]m :action MethodDown<CR>
let g:WhichKeyDesc_next_method = "[m Next | Method Start"
nnoremap ]d :action GotoNextError<CR>
let g:WhichKeyDesc_next_error = "]d General | Next Error"
nnoremap [d :action GotoPreviousError<CR>
let g:WhichKeyDesc_previous_error = "[d General | Previous Error"

" Git
let g:WhichKeyDesc_git = "<leader>g Git"
nnoremap <leader>g] :action JumpToLastChange<CR>
let g:WhichKeyDesc_git_next_hunk = "<leader>g] Git | Next Hunk"
nnoremap <leader>g[ :action JumpToNextChange<CR>
let g:WhichKeyDesc_git_prev_hunk = "<leader>g[ Git | Previous Hunk"

" NERDTree
nnoremap <leader>e :NERDTreeToggle<CR>
let g:WhichKeyDesc_toggle_nerd_tree = "<leader>e General | Toggle NERDTree"
nnoremap <C-n> :NERDTreeFocus<CR>
let g:WhichKeyDesc_focus_nerd_tree = "<leader>e General | Focus NERDTree"

" Plugin
let g:WhichKeyDesc_plugins = "<leader>p Plugins"
nnoremap <leader>ph :action WelcomeScreen.Plugins<CR>
let g:WhichKeyDesc_plugins_home = "<leader>ph Plugins | Home"

" LSP
let g:WhichKeyDesc_lsp = "<leader>l LSP"
nnoremap <leader>lf :action ReformatCode<CR>
let g:WhichKeyDesc_lsp_format = "<leader>lf LSP | Format"

" Flash
nnoremap s (flash.search)
xnoremap s (flash.search)

" vim:ft=vim
